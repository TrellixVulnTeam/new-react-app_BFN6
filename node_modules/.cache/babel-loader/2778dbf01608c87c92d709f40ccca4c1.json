{"ast":null,"code":"var _jsxFileName = \"/home/bibek/git-projects/new-react-app/src/components/toDoList/ToDolists.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../sass/todolist/todolist.css';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDolists() {\n  _s();\n\n  const [inputValue, setinputValue] = useState('');\n  const [toggle, settoggle] = useState(true);\n  const [lists, setlists] = useState([]);\n  const [clickedId, setclickedId] = useState(null);\n\n  const addItem = () => {\n    if (!inputValue) {} else {\n      const getlist = {\n        id: new Date().getTime().toString(),\n        name: inputValue\n      };\n      setlists([...lists, getlist]);\n      setinputValue('');\n    }\n  };\n\n  const editItem = i => {\n    const afterEdit = lists.find(e => {\n      return i === e.id;\n    });\n    setclickedId(i);\n    settoggle(false);\n    setinputValue(e.name);\n  };\n\n  const deleteItem = i => {\n    const afterDelete = lists.filter(e => {\n      return i !== e.id;\n    });\n    setlists(afterDelete);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputValue(e.target.value),\n        value: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), toggle ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lists.map(e => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-around',\n              border: '2px solid black',\n              backgroundColor: 'whitesmoke',\n              margin: '10px',\n              borderRadius: '1rem',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n              onClick: () => editItem(e.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n              onClick: () => deleteItem(e.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), e.name]\n          }, e.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDolists, \"NQA+NohLK5f+iw0qnobo1tC+qMY=\");\n\n_c = ToDolists;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDolists\");","map":{"version":3,"sources":["/home/bibek/git-projects/new-react-app/src/components/toDoList/ToDolists.jsx"],"names":["React","useState","AddIcon","DeleteForeverIcon","EditIcon","ToDolists","inputValue","setinputValue","toggle","settoggle","lists","setlists","clickedId","setclickedId","addItem","getlist","id","Date","getTime","toString","name","editItem","i","afterEdit","find","e","deleteItem","afterDelete","filter","target","value","map","display","justifyContent","border","backgroundColor","margin","borderRadius","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../sass/todolist/todolist.css'\nimport AddIcon from '@mui/icons-material/Add'\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport default function ToDolists() {\n    const [inputValue, setinputValue] = useState('');\n    const [toggle, settoggle] = useState(true);\n    const [lists, setlists] = useState([]);\n    const [clickedId, setclickedId] = useState(null);\n\n    const addItem=()=>{\n        if(!inputValue){\n\n        }\n        \n        else{\n            const getlist={id : new Date().getTime().toString(), name : inputValue}\n            setlists([...lists, getlist])\n            setinputValue('')\n        }\n    }\n\n    const editItem = (i)=>{\n        const afterEdit= lists.find((e)=>{\n            return i === e.id\n        })\n        setclickedId(i)\n        settoggle(false)\n        setinputValue(e.name)\n    }\n\n    const deleteItem=(i)=>{\n        const afterDelete= lists.filter((e)=>{\n            return i !== e.id\n        })\n        setlists(afterDelete)\n    }\n  return (\n    <div className='todolist'>\n    <div className=\"todo-center\">\n        <h1>To do List</h1>\n        <input type=\"text\" onChange={(e)=>setinputValue(e.target.value)} value={inputValue} />\n        {toggle?\n        <button onClick={addItem}><AddIcon/></button>:\n        <button onClick={addItem}><EditIcon/></button>\n        }\n\n        <ul>\n            {lists.map((e)=>{\n                return(\n\n                    <li key={e.id} style={{display : 'flex', justifyContent : 'space-around', border : '2px solid black', backgroundColor : 'whitesmoke', margin : '10px', borderRadius : '1rem', alignItems : 'center'}} >\n                    <EditIcon onClick={()=>editItem(e.id)}/>\n                    <DeleteForeverIcon onClick={()=>deleteItem(e.id)}/>\n                    {e.name}\n                    </li>\n            )\n            })}\n        </ul>\n        </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}