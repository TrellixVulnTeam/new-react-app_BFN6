{"ast":null,"code":"var _jsxFileName = \"/home/bibek/git-projects/new-react-app/src/components/toDoList/Todolist.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import ToDolist from './ToDolists'\n\nimport '../sass/todolist/todolist.css';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit'; // const getLocalItems = ()=>{\n//     let getList = localStorage.getItem('getList')\n//     console.log(getlist)\n//     if(getlist){\n//         return JSON.parse(localStorage.getItem('getList'))\n//     }\n//     else {\n//         return []\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todolist() {\n  _s();\n\n  const [init, setinit] = useState('');\n  const [list, setlist] = useState([]);\n  const [toggle, settoggle] = useState(false);\n\n  const addList = () => {\n    if (!init) {} else {\n      const newList = {\n        id: new Date().getTime().toString(),\n        name: init\n      };\n      setlist([newList, ...list]);\n      setinit('');\n    }\n  };\n\n  const deleteItem = i => {\n    const afterDelete = list.filter(ele => {\n      return i !== ele.id;\n    });\n    setlist(afterDelete);\n  };\n\n  const deleteAll = () => {\n    setlist([]);\n  };\n\n  const editList = (e, i) => {\n    const afterEdit = list.find(ele => {\n      return ele.id === i;\n    });\n    settoggle(false);\n    init(afterEdit.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Items...\",\n        onChange: e => setinit(e.target.value),\n        value: init\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), !toggle ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addList,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 49\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [list.map(e => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-around',\n              border: '2px solid black',\n              backgroundColor: 'whitesmoke',\n              margin: '10px',\n              borderRadius: '1rem',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n              onClick: () => editList(e.name, e.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n              onClick: () => deleteItem(e.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), e.name]\n          }, e.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          onClick: deleteAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todolist, \"rtYejnrPvTadQus/OxLK6ziXin0=\");\n\n_c = Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/home/bibek/git-projects/new-react-app/src/components/toDoList/Todolist.jsx"],"names":["React","useState","AddIcon","DeleteForeverIcon","EditIcon","Todolist","init","setinit","list","setlist","toggle","settoggle","addList","newList","id","Date","getTime","toString","name","deleteItem","i","afterDelete","filter","ele","deleteAll","editList","e","afterEdit","find","target","value","map","display","justifyContent","border","backgroundColor","margin","borderRadius","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n// import ToDolist from './ToDolists'\nimport '../sass/todolist/todolist.css'\nimport AddIcon from '@mui/icons-material/Add'\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\n\n// const getLocalItems = ()=>{\n//     let getList = localStorage.getItem('getList')\n//     console.log(getlist)\n\n//     if(getlist){\n//         return JSON.parse(localStorage.getItem('getList'))\n//     }\n//     else {\n//         return []\n//     }\n// }\n\nexport default function Todolist() {\n    const [init, setinit] = useState('')\n    const [list, setlist] = useState([]);\n    const [toggle, settoggle] = useState(false);\n   \n    const addList = ()=>{\n        if(!init){\n\n        }\n        else{\n            const newList = {id : new Date().getTime().toString(), name : init}\n            setlist([newList,...list])\n            setinit('')\n        }\n    }\n\n    const deleteItem =(i)=>{\n        const afterDelete = list.filter((ele)=>{\n            return i !== ele.id\n        })\n            setlist(afterDelete)\n    }\n\n    const deleteAll = ()=>{\n        setlist([])\n    }\n\n    const editList =(e,i)=>{\n        const afterEdit = list.find((ele)=>{\n            return ele.id === i\n        })\n        settoggle(false)\n        init(afterEdit.name)\n    }\n\n    return (\n        <div className='todolist'>\n            <div className=\"todo-center\">\n                <h1>To do List</h1>\n                <input type=\"text\" placeholder='Add Items...' onChange={(e)=>setinit(e.target.value)} value={init}/> \n                {!toggle ?\n                <button onClick={addList}><span><AddIcon/> </span></button>\n                : <EditIcon  />\n                }\n                <ul>\n                    {list.map((e)=>{\n                        return(\n                            <li key={e.id} style={{display : 'flex', justifyContent : 'space-around', border : '2px solid black', backgroundColor : 'whitesmoke', margin : '10px', borderRadius : '1rem', alignItems : 'center'}} >\n                                <EditIcon onClick={()=>editList(e.name,e.id)} />\n                                <DeleteForeverIcon onClick={()=>deleteItem(e.id)} />\n                            {e.name}\n                            </li>\n                        )\n                    })}\n              <DeleteForeverIcon onClick={deleteAll} />\n                </ul>\n\n            </div>\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}