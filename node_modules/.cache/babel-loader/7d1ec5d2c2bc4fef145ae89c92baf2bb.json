{"ast":null,"code":"var _jsxFileName = \"/home/bibek/git-projects/new-react-app/src/components/toDoList/Todolist.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import ToDolist from './ToDolists'\n\nimport '../sass/todolist/todolist.css';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit'; // const getLocalItems = ()=>{\n//     let getList = localStorage.getItem('getList')\n//     console.log(getlist)\n//     if(getlist){\n//         return JSON.parse(localStorage.getItem('getList'))\n//     }\n//     else {\n//         return []\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todolist() {\n  _s();\n\n  const [init, setinit] = useState('');\n  const [list, setlist] = useState([]);\n  const [toggle, settoggle] = useState(true);\n  const [clicked, setclicked] = useState(null);\n\n  const addList = () => {\n    if (!init) {} else if (init && !toggle) {\n      setlist(list.map(ele => {\n        if (ele.id === clicked) {\n          return { ...ele,\n            name: setinit\n          };\n        }\n\n        return ele;\n      }));\n      settoggle(true);\n      setinit('');\n      setclicked(null);\n    } else {\n      const newList = {\n        id: new Date().getTime().toString(),\n        name: init\n      };\n      setlist([newList, ...list]);\n      setinit('');\n    }\n  };\n\n  const deleteItem = i => {\n    const afterDelete = list.filter(ele => {\n      return i !== ele.id;\n    });\n    setlist(afterDelete);\n  };\n\n  const deleteAll = () => {\n    setlist([]);\n  };\n\n  const editList = i => {\n    const afterEdit = list.find(ele => {\n      return ele.id === i;\n    });\n    settoggle(false);\n    setinit(afterEdit.name);\n    setclicked(i);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Items...\",\n        onChange: e => setinit(e.target.value),\n        value: init\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), toggle ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addList,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 49\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: addList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [list.map(e => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-around',\n              border: '2px solid black',\n              backgroundColor: 'whitesmoke',\n              margin: '10px',\n              borderRadius: '1rem',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n              onClick: () => editList(e.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n              onClick: () => deleteItem(e.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), e.name]\n          }, e.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          onClick: deleteAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todolist, \"7Z4FYWNGsiJsyVI2nvHMIgwWWGg=\");\n\n_c = Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/home/bibek/git-projects/new-react-app/src/components/toDoList/Todolist.jsx"],"names":["React","useState","AddIcon","DeleteForeverIcon","EditIcon","Todolist","init","setinit","list","setlist","toggle","settoggle","clicked","setclicked","addList","map","ele","id","name","newList","Date","getTime","toString","deleteItem","i","afterDelete","filter","deleteAll","editList","afterEdit","find","e","target","value","display","justifyContent","border","backgroundColor","margin","borderRadius","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n// import ToDolist from './ToDolists'\nimport '../sass/todolist/todolist.css'\nimport AddIcon from '@mui/icons-material/Add'\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\n\n// const getLocalItems = ()=>{\n//     let getList = localStorage.getItem('getList')\n//     console.log(getlist)\n\n//     if(getlist){\n//         return JSON.parse(localStorage.getItem('getList'))\n//     }\n//     else {\n//         return []\n//     }\n// }\n\nexport default function Todolist() {\n    const [init, setinit] = useState('')\n    const [list, setlist] = useState([]);\n    const [toggle, settoggle] = useState(true);\n    const [clicked, setclicked] = useState(null);\n   \n    const addList = ()=>{\n        if(!init){\n\n        }\n        else if(init && !toggle){\n           setlist(\n               list.map((ele)=>{\n                   if(ele.id===clicked){\n                       return {...ele, name : setinit}\n                   }\n                   return ele\n               })\n           )\n           settoggle(true)\n           setinit('')\n           setclicked(null)\n        }\n        else{\n            const newList = {id : new Date().getTime().toString(), name : init}\n            setlist([newList,...list])\n            setinit('')\n        }\n    }\n\n    const deleteItem =(i)=>{\n        const afterDelete = list.filter((ele)=>{\n            return i !== ele.id\n        })\n            setlist(afterDelete)\n    }\n\n    const deleteAll = ()=>{\n        setlist([])\n    }\n\n    const editList =(i)=>{\n        const afterEdit = list.find((ele)=>{\n            return ele.id === i\n        })\n        settoggle(false)\n        setinit(afterEdit.name)\n        setclicked(i)\n    }\n\n    return (\n        <div className='todolist'>\n            <div className=\"todo-center\">\n                <h1>To do List</h1>\n                <input type=\"text\" placeholder='Add Items...' onChange={(e)=>setinit(e.target.value)} value={init}/> \n                {toggle ?\n                <button onClick={addList}><span><AddIcon/> </span></button>\n                : <EditIcon  onClick={addList} />\n                }\n                <ul>\n                    {list.map((e)=>{\n                        return(\n                            <li key={e.id} style={{display : 'flex', justifyContent : 'space-around', border : '2px solid black', backgroundColor : 'whitesmoke', margin : '10px', borderRadius : '1rem', alignItems : 'center'}} >\n                                <EditIcon onClick={()=>editList(e.id)} />\n                                <DeleteForeverIcon onClick={()=>deleteItem(e.id)} />\n                            {e.name}\n                            </li>\n                        )\n                    })}\n              <DeleteForeverIcon onClick={deleteAll} />\n                </ul>\n\n            </div>\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}